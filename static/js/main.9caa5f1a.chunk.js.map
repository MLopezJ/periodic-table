{"version":3,"sources":["Components/ChemicalElement.js","Components/Square.js","Components/Matrix.js","Components/AppHeader.js","Components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["ChemicalElement","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","element","chemicalElements","find","item","atomic","props","atomicNumber","setChemicalElement","info","title","description","react_default","a","createElement","className","state","chemicalElement","undefined","modalChemicalElementInformation","chemicalElementGroupName","bind","assertThisInitialized","toggleModalChemicalElementInformation","prettyGroupName","require","groupName","index","charAt","toUpperCase","slice","indicator","indexOf","substr","length","setState","group","concat","symbol","name","onClick","atomicMass","electronicConfiguration","electronegativity","atomicRadius","ionRadius","vanDelWaalsRadius","ionizationEnergy","electronAffinity","oxidationStates","Component","Square","emptySquare","tinySquare","positionOfSquareInFormat","Components_ChemicalElement","Matrix","frameOfMatrix","position","contend","numberOfColumns","columnsQuantity","matrixFormat","listOfColumnsId","Array","apply","map","Number","column","matrixRows","rowFormat","pos","cellIndex","Components_Square","AppHeader","Footer","dedicationMessage","showDedicationMessage","toggleShowDedicationMessage","App","Components_AppHeader","Components_Matrix","Components_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9caa5f1a.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport { PropTypes } from \"prop-types\";\r\nimport './../css/index.css'\r\nimport './../css/colorsOfTheElements.css'\r\nimport './../css/chemicalElement.css'\r\n\r\nclass ChemicalElement extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            chemicalElement : undefined,\r\n            modalChemicalElementInformation : false, \r\n            chemicalElementGroupName : undefined\r\n        }\r\n\r\n        this.setChemicalElement = this.setChemicalElement.bind(this);\r\n        this.toggleModalChemicalElementInformation = this.toggleModalChemicalElementInformation.bind(this);\r\n        this.prettyGroupName = this.prettyGroupName.bind(this);\r\n        this.chemicalElements = require('./../Data/chemicalElements');\r\n    }\r\n\r\n    prettyGroupName(groupName){\r\n        groupName =  groupName.charAt(0).toUpperCase() + groupName.slice(1)\r\n        var index\r\n        var indicator = true\r\n        while(indicator){\r\n            index = groupName.indexOf('_')\r\n            if (index === -1)\r\n                indicator = false;\r\n            else{\r\n                groupName  = groupName.substr(0,index)+' '+ groupName.substr(index+1, groupName.length-1)\r\n            }  \r\n        }\r\n        //console.log(groupName)\r\n        this.setState({\r\n            chemicalElementGroupName: groupName\r\n        });\r\n    }\r\n\r\n    toggleModalChemicalElementInformation(){\r\n        this.prettyGroupName(this.state.chemicalElement.group)\r\n        this.setState({\r\n            modalChemicalElementInformation: !this.state.modalChemicalElementInformation\r\n        });\r\n    }\r\n\r\n    setChemicalElement(element){\r\n        this.setState({\r\n            chemicalElement: element\r\n        });\r\n    }\r\n    \r\n    componentDidMount = () =>{\r\n        const element = this.chemicalElements.find(item => item.atomic === this.props.atomicNumber)\r\n        this.setChemicalElement(element)\r\n    }\r\n\r\n    info = (title, description) => {\r\n        return(\r\n            <div className={'box-body-information'}>\r\n                <div className={'box-body-information-key'}>\r\n                    {title}\r\n                </div>\r\n                <div className={'box-body-information-value'}>\r\n                    {description} \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    \r\n\r\n    render(){\r\n        return(\r\n            <div className = {'chemicalElement'}> \r\n                {\r\n                    this.state.chemicalElement !== undefined ?\r\n                        <div className= {`periodic-table-element information ${this.state.chemicalElement.group}`}> \r\n                            {/*console.log(this.state.chemicalElement)*/}\r\n                            <div className={'atomic'}>{this.state.chemicalElement.atomic}</div>\r\n                            <div className={'symbol'}>{this.state.chemicalElement.symbol}</div>\r\n                            <div className={'name'}>{this.state.chemicalElement.name}</div>\r\n                            <canvas onClick={this.toggleModalChemicalElementInformation} className=\"ink\"></canvas>\r\n                        </div>\r\n                    :\r\n                        null\r\n                }\r\n\r\n                {\r\n                    this.state.modalChemicalElementInformation ?\r\n                       <div>\r\n                           <div className={'overlay'} onClick={this.toggleModalChemicalElementInformation}></div>\r\n                            <div className={'styleElementModal modal modal-page '}> \r\n                                <div className={'box'}>\r\n\r\n                                    <div className={`box-header information ${this.state.chemicalElement.group} `}>\r\n                                        <div className={'element-name'}>\r\n                                            {this.state.chemicalElement.name}\r\n                                        </div>\r\n\r\n                                        <div className={'element-group'}>\r\n                                            {this.state.chemicalElementGroupName}\r\n                                            \r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className={'box-body'}>\r\n\r\n                                        {\r\n                                            this.state.chemicalElement.atomic !== null && \r\n                                            this.info(\"Atomic Number\", this.state.chemicalElement.atomic) \r\n                                        }\r\n                                        \r\n                                        {\r\n                                            this.state.chemicalElement.symbol &&\r\n                                            this.info(\"Symbol\", this.state.chemicalElement.symbol)\r\n                                        }\r\n                                        \r\n                                        {\r\n                                            this.state.chemicalElement.atomicMass &&\r\n                                            this.info(\"Mass\", this.state.chemicalElement.atomicMass)\r\n                                        }\r\n                                        \r\n                                        {\r\n                                            this.state.chemicalElement.electronicConfiguration &&\r\n                                            this.info(\"Electronic Conf.\", this.state.chemicalElement.electronicConfiguration)\r\n                                        }\r\n\r\n                                        {\r\n                                            this.state.chemicalElement.electronegativity &&\r\n                                            this.info(\"Electronegativity\", this.state.chemicalElement.electronegativity)\r\n                                        }\r\n\r\n                                        {\r\n                                            this.state.chemicalElement.atomicRadius &&\r\n                                            this.info(\"Atomic Radius\", this.state.chemicalElement.atomicRadius)\r\n                                        }\r\n                                        \r\n                                        {\r\n                                            this.state.chemicalElement.ionRadius &&\r\n                                            this.info(\"Ionic Radius\", `${this.state.chemicalElement.ionRadius} pm`)\r\n                                        }\r\n                                        \r\n                                        {\r\n                                            this.state.chemicalElement.vanDelWaalsRadius !== null &&\r\n                                            this.info(\"Van der Waals Radius\", `${this.state.chemicalElement.vanDelWaalsRadius} pm`)\r\n                                        }\r\n                                        \r\n                                        {\r\n                                            this.state.chemicalElement.ionizationEnergy &&\r\n                                            this.info(\"Ionic Energic\", `${this.state.chemicalElement.ionizationEnergy} mol`)\r\n                                        }\r\n                                        \r\n                                        {\r\n                                            this.state.chemicalElement.electronAffinity !== null &&\r\n                                            this.info(\"Electronic affinity\", this.state.chemicalElement.electronAffinity)\r\n                                        }\r\n                                        \r\n                                        {\r\n                                            this.state.chemicalElement.oxidationStates &&\r\n                                            this.info(\"Oxidation state\", this.state.chemicalElement.oxidationStates)\r\n                                        }\r\n                                        \r\n                                    </div>\r\n                                \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    :\r\n                        null\r\n                }\r\n                \r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nChemicalElement.propTypes = {\r\n\r\n    atomicNumber : PropTypes.number.isRequired\r\n        \r\n}\r\n\r\nexport default ChemicalElement;","import React, {Component} from 'react';\r\nimport { PropTypes } from \"prop-types\";\r\nimport ChemicalElement from './../Components/ChemicalElement'\r\nimport './../css/index.css'\r\n\r\n\r\nclass Square extends Component {\r\n\r\n    emptySquare = () => (\r\n        <div className={'Empty'}> \r\n            {/*  \r\n            <p>{'empty'}</p>\r\n            */}\r\n        </div>\r\n    )\r\n\r\n    tinySquare = () => (\r\n        <div className={'Tiny'}> \r\n            {/*\r\n            <p className={'Tiny'}>{'tiny'}</p>\r\n            */}\r\n        </div>\r\n    )\r\n\r\n    render(){\r\n        return(\r\n            <div className={'Square'} >\r\n                {\r\n                    this.props.positionOfSquareInFormat > 0 ?\r\n                        <ChemicalElement\r\n                            atomicNumber = {this.props.positionOfSquareInFormat}\r\n                        />\r\n                    :\r\n                        null\r\n                }\r\n\r\n                {\r\n                    this.props.positionOfSquareInFormat === 0 ?\r\n                        this.emptySquare()\r\n                    :\r\n                        null\r\n                }\r\n\r\n                {\r\n                    this.props.positionOfSquareInFormat < 0 ?\r\n                        this.tinySquare()\r\n                    :\r\n                        null\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    \r\n    \r\n}\r\n\r\nSquare.propTypes = {\r\n\r\n    positionOfSquareInFormat : PropTypes.number.isRequired\r\n        \r\n}\r\n\r\nexport default Square;","import React, {Component} from 'react';\r\nimport Square from './../Components/Square'\r\nimport './../css/index.css'\r\n\r\n\r\nclass Matrix extends Component {\r\n    constructor() {\r\n        super();\r\n        this.matrixFormat = require('./../Data/format.json');\r\n    }\r\n\r\n    frameOfMatrix = (position, contend) => {\r\n        return(\r\n            <div className = {`row matrixFrame ${position}`}>\r\n                {contend}\r\n            </div>\r\n        )\r\n    }\r\n    \r\n    numberOfColumns = () => {\r\n        const columnsQuantity = this.matrixFormat[0].length+2 // (vertex)\r\n        const listOfColumnsId = Array.apply(null, {length: columnsQuantity}).map(Number.call, Number)\r\n        return(\r\n            <div className='row'>\r\n            {\r\n                listOfColumnsId.map((column, position)=>{\r\n                    if (position === 0 || position === 19 ){\r\n                        return this.frameOfMatrix('vertex',null)\r\n                    }\r\n                    else{\r\n                        return this.frameOfMatrix('numberOfColumn',position)\r\n                    }\r\n                })\r\n            }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    matrixRows = () => {\r\n\r\n        return this.matrixFormat.map((rowFormat, position)=>{\r\n\r\n            var pos = undefined\r\n            if (position <= 6)\r\n                pos = position+1\r\n            else  \r\n                pos = null\r\n            return(\r\n                <div className=\"row\">\r\n                    {this.frameOfMatrix('numberOfRow',pos)}\r\n                    {rowFormat.map((cellIndex)=>{\r\n                        return(\r\n                            <Square\r\n                                positionOfSquareInFormat = {cellIndex}\r\n                            />\r\n                        )\r\n                    })}\r\n                    {this.frameOfMatrix('numberOfRow',pos)}\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"periodic-table\">\r\n                <div className=\"table\">\r\n                {this.numberOfColumns()}\r\n                {this.matrixRows()}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n\r\n}\r\n\r\nexport default Matrix;","import React, {Component} from 'react';\r\nimport './../css/appHeader.css';\r\nimport './../css/index.css';\r\n\r\nclass AppHeader extends Component{\r\n    render(){\r\n        return(\r\n            <div className={'app-header'}>\r\n                <h1 className={'title'}>Periodic Table</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AppHeader;","import React, {Component} from 'react';\r\nimport './../css/footer.css';\r\nimport './../css/index.css';\r\n\r\nimport './../css/index.css'\r\nimport './../css/colorsOfTheElements.css'\r\nimport './../css/chemicalElement.css'\r\n\r\n\r\nclass Footer extends Component{\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = { \r\n            showDedicationMessage: false\r\n         };\r\n\r\n         this.toggleShowDedicationMessage = this.toggleShowDedicationMessage.bind(this);\r\n    }\r\n\r\n    toggleShowDedicationMessage() {\r\n        this.setState({\r\n            showDedicationMessage : !this.state.showDedicationMessage\r\n        });\r\n    }\r\n\r\n    dedicationMessage = () => {\r\n        if (this.state.showDedicationMessage){\r\n\r\n        return(\r\n            <div>\r\n                <div className={'overlay'} onClick={this.toggleShowDedicationMessage}></div>\r\n                <div className={'styleElementModal modal modal-page '}> \r\n                    <div className={'box'}>\r\n                            {\r\n                                <div className={'box-body-information'}>\r\n                                Para:\r\n                                <div className={'box-header information alkali_metals'}> {/*  ${this.state.chemicalElement.group} */}\r\n                        \r\n                            <div className={'element-name'}>\r\n                                {'Marianne'}\r\n                            </div>\r\n\r\n                            <div className={'element-group'}>\r\n                                {'Hull'}\r\n                            </div>\r\n\r\n                            <div className={'element-group'}>\r\n                                {'Cantillo'}\r\n                            </div>\r\n                        </div>\r\n                                </div>  \r\n                            }\r\n\r\n                        <div className={'box-body'}>\r\n                            {\r\n                                <div className={'box-body-information-footer information amphigens'}>\r\n                                Hecho con código y cariño para una gran persona,\r\n                                </div>  \r\n                            }\r\n                            {\r\n                                <div className={'box-body-information-footer information noble_gases'}>\r\n                                brillante química,\r\n                                </div>  \r\n                            }\r\n                            {\r\n                                <div className={'box-body-information-footer information transition_metals'}>\r\n                                talentosa comediante, bailarina y cantante.\r\n                                </div>  \r\n                            }\r\n                            {\r\n                                <div className={'box-body-information-footer information basic_metals'}>\r\n                                Que tiene un corazón gigante y lleno de cariño, \r\n                                </div>  \r\n                            }\r\n                            {\r\n                                <div className={'box-body-information-footer information alkali_earth_metals'}>\r\n                                una mirada transparentes como su alma \r\n                                </div>  \r\n                            }\r\n                            {\r\n                                <div className={'box-body-information-footer information actinoids'}>\r\n                                y una sonrisa para cada nueva situación \r\n                                </div>  \r\n                            }\r\n                            \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        </div>\r\n        )\r\n        }\r\n    }\r\n\r\n    render(){\r\n        \r\n        return(\r\n            <div>\r\n                {this.dedicationMessage()}\r\n            <div className={'footer'}>\r\n                <div onClick={this.toggleShowDedicationMessage}>\r\n                    <h1 className={'title'}>{'<ML/>'}</h1>\r\n                   {/*<h4 className={'title'}> {'Diciembre, 2018'} </h4>*/}\r\n                </div>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport Matrix from './Components/Matrix';\r\nimport AppHeader from './Components/AppHeader';\r\nimport Footer from './Components/Footer';\r\n//import './App.css';\r\nimport './css/index.css'\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className={'app'}>\r\n        <div className={'app-content'}>\r\n        <AppHeader/>\r\n        <Matrix/>\r\n        <Footer/>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}